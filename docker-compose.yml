version: '3.8'

services:
  # ------------------------------------
  # 1. Database Service (PostgreSQL)
  # ------------------------------------
  db:
    image: postgres:16-alpine # Use a stable, lightweight image
    restart: always
    environment:
      POSTGRES_USER: user        # Changed PGUSER to POSTGRES_USER for standard Postgres image
      POSTGRES_PASSWORD: password  # Changed PGPASSWORD to POSTGRES_PASSWORD
      POSTGRES_DB: fastapi_db    # Changed PGDB to POSTGRES_DB
    ports:
      # Expose port 5432 on the host (optional, mainly for debugging/admin tools)
      - "5432:5432"
    volumes:
      # Persistent storage for database data
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d fastapi_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # ------------------------------------
  # 2. Migration Service (NEW)
  # ------------------------------------
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    image: experiment-api:latest-migrate # Give it a distinct image tag
    environment:
      # Must pass the DB URL so Alembic can connect
      DATABASE_URL: postgresql://user:password@db:5432/fastapi_db
    volumes:
      - .:/app
    depends_on:
      # Migration must wait for the database to be fully up and running
      db:
        condition: service_healthy
    # ðŸŽ¯ New Command: Only runs the Alembic upgrade command and then exits (success if migration completes)
    command: ["python", "-m", "alembic", "upgrade", "head"]
    # Do NOT set restart: always, as it should exit successfully
    restart: "no" # Important: Should run once and exit

  # ------------------------------------
  # 2. FastAPI Application Service
  # ------------------------------------
  api:
    build:
      context: . # Use the current directory, where your Dockerfile is located
      dockerfile: Dockerfile
    image: experiment-api:latest # Name the resulting image
    restart: always
    ports:
      # Expose the application port
      - "8000:8000"
    environment:
      # DATABASE_URL uses the service name 'db' as the host
      DATABASE_URL: postgresql://user:password@db:5432/fastapi_db
    depends_on:
      # Ensure the database container starts before the API container
      migrate:
        condition: service_completed_successfully
    volumes:
      # Mount the current code into the container for easy development/reloads (optional)
      - .:/app

volumes:
  # Define the named volume for persistent data storage
  postgres_data: